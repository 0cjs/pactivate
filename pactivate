[ -n "$BASH_VERSION" ] || { echo 1>&2 "source (.) this with Bash."; exit 9; }
#   https://stackoverflow.com/a/28776166/107294
(return 0 2>/dev/null) \
    || { echo 1>&2 "source (.) pactivate with Bash."; exit 9; }

__pa_cleanup() {
    unset __pa_cleanup __pa_builddir __pa_quiet __pa_python __pa_pyver \
        __pa_bootdir __pa_basedir __pa_requirements
}

__pa_basedir=$(cd "$(dirname "$BASH_SOURCE")" && pwd -P)
__pa_builddir=
__pa_quiet=
while [[ $# -gt 0 ]]; do case "$1" in
    -b) shift; __pa_builddir="$1"; shift;;
    -B) shift; __pa_basedir="$1"; shift;;
    -q) shift; __pa_quiet=-q;;
    *)  echo 1>&2 "pactivate: unknown argument: $1"; __pa_cleanup; return 2;;
esac; done;

__pa_python=python3     #   XXX need to set this from symlink, if present

__pa_requirements="$__pa_basedir/requirements.txt"

[[ -z $__pa_builddir ]] && __pa_builddir=$(cd "$__pa_basedir" && pwd -P)/.build

__pa_bootdir="$__pa_builddir/bootstrap/pactivate"
mkdir -p "$__pa_bootdir"    # also ensures that $__pa_builddir exists

[[ -x $__pa_bootdir/bin/pip ]] || {
    echo '----- Checking Python version'
    echo "Using $__pa_python"
    echo -n "Version: "
    "$__pa_python" --version || {
        echo 1>&2 "pactivate: bad python interpreter"
        __pa_cleanup; return 3
    }
    __pa_pyver=$("$__pa_python" -c '
from platform import *;
if (python_version() < "3.6"):
    print("{}.{}".format(*python_version_tuple()))
        ')
    echo "----- Installing bootstrap pip (ver=${__pa_pyver:-latest})"
    curl ${__pa_quiet:+--silent} \
        "https://bootstrap.pypa.io/pip/$__pa_pyver/get-pip.py" \
        | "$__pa_python" - $__pa_quiet -t "$__pa_bootdir"
    PYTHONPATH="$__pa_bootdir" "$__pa_bootdir/bin/pip" --version
}

[[ -d $__pa_bootdir/virtualenv/ ]] || {
    echo '----- Installing bootstrap virtualenv'
    PYTHONPATH="$__pa_bootdir" "$__pa_bootdir/bin/pip" \
        $__pa_quiet install -t "$__pa_bootdir" virtualenv
}

[[ -d $__pa_builddir/virtualenv/ ]] || {
    echo '----- Building virtualenv'
    PYTHONPATH="$__pa_bootdir" "$__pa_python" -s \
        -m virtualenv $__pa_quiet --prompt $(dirname "$__pa_basedir") \
        "$__pa_builddir/virtualenv/" \
    && [[ -f "$__pa_requirements" ]] \
    && "$__pa_builddir/virtualenv/bin/pip" \
        install $__pa_quiet -r "$__pa_requirements"
}

. "$__pa_builddir"/virtualenv/*/activate
__pa_cleanup
